"" load bundles
source ~/.vim/bundles.vim

"" general settings
set autoread                    " auto-reread file if modified outside and not in vim
set autowrite                   " auto-write file before certain operations
set backup                      " leave a backup file behind on save
set encoding=utf-8              " utf-8 is default encoding
set foldmethod=syntax           " use syntax rules for folding
set formatoptions+=21           " use indent from second line of a paragraph, don't break line after single letter word
set history=1000                " save more history
set nocompatible                " choose no compatibility with legacy vi
set ssop+=winpos,localoptions   " save window positions and local options for :mksession
let mapleader = "\<space>"      " set the trigger key for plugins/shortcuts
syntax enable
filetype plugin indent on

"" whitespace
set backspace=indent,eol,start  " backspace through everything in insert mode
set expandtab                   " use spaces, not tabs
set list                        " highlight some special characters
set listchars=tab:\|\ ,trail:·,extends:»,precedes:«
set nojoinspaces                " single dot spacing<D-`>
set nowrap                      " don't wrap lines
set tabstop=2 shiftwidth=2      " a tab is two spaces

"" searching
set gdefault                    " g flag by default for :s
set hlsearch                    " highlight matches
set ignorecase                  " searches are case insensitive...
set incsearch                   " incremental searching
set matchpairs+=<:>             " add < and > to list of "matching" brackets
set showmatch                   " flash matching bracket
set smartcase                   " ... unless they contain at least one capital letter

"" ui
set background=dark             " use dark versions of backgrounds
set cmdheight=2                 " use two lines for command-line, useful to avoid hit-enter prompts
set cursorline                  " highlight current line
set display=lastline            " display as much as possible from last line in window
set keymodel+=startsel          " shift+special key = selection
set laststatus=2                " always show status line
set lazyredraw                  " batch some screen updates during macros and such
set number                      " display current line number
set ruler                       " display coords in bottom right corner
set scrolloff=14                " leave this amount of lines while scrolling up/down
set shortmess+=mrwI             " shorter indicators (like [RO]) in messages, no :intro on start
set shortmess-=l                " verbose "x lines, y characters" in messages
set showcmd                     " display incomplete commands
set wildmenu                    " use fancy tab-completion

"" colors
colorscheme jellybeans
" make sure vim clears trailing empty space properly on 256color terms
" http://snk.tuxfamily.org/log/vim-256color-bce.html
if &term =~ '256color'
  set t_ut=
endif

"" autocommands
" remove trailing whitespace on save
autocmd BufWritePre * :%s/\s\+$//e
" different tabs for Python code
autocmd BufRead,BufNewFile *.py set tabstop=4 shiftwidth=4 textwidth=80
" disable certain backup-related settings that make crontab complain
au FileType crontab set nobackup nowritebackup
" tolerate tabs in golang
au BufRead,BufNewFile *.go set noexpandtab

"" keyboard mappings
" stop using arrow keys
map <up> <nop>
map <down> <nop>
map <left> <nop>
map <right> <nop>
imap <up> <nop>
imap <down> <nop>
imap <left> <nop>
imap <right> <nop>
nnoremap j gj
nnoremap k gk
" options togglers
nmap <silent> <leader>F :set fullscreen! fullscreen?<CR>
nmap <silent> <leader>h :set hlsearch! hlsearch?<CR>
nmap <silent> <leader>l :set list! list?<CR>
nmap <silent> <leader>p :set paste! paste?<CR>
nmap <silent> <leader>w :set wrap! wrap?<CR>
" convenience binds for frequently used operations
nnoremap <leader><leader> <c-^>
nnoremap <leader>b :CtrlPBuffer<cr>
nnoremap <leader>o :CtrlPMixed<cr>
nnoremap <leader>c :copen<cr>
nnoremap <leader>C :cclose<cr>
nmap <silent> <leader>rc :n $HOME/.vimrc<CR>
" moving whole lines
nmap <C-k> ddkP
nmap <C-j> ddp
vmap <C-k> xkP`[V`]
vmap <C-j> xp`[V`]
" better tab
noremap <tab> v>
noremap <s-tab> v<
vnoremap <tab> >gv
vnoremap <s-tab> <gv
" window operations
nmap <C-C> :close<cr>
" easier escape
inoremap jj <ESC>
" forgot your sudo?
cmap w!! w !sudo tee % >/dev/null
" change searches to use normal regexpes by default
nnoremap / /\v
vnoremap / /\v
" no yank on paste
xnoremap p pgvy

"" plugin config
" airline
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1
" ctrlp
let g:ctrlp_map = ''
" goldenview
nmap <F8> <Plug>GoldenViewSwitchToggle
nmap <C-F8> <Plug>GoldenViewSwitchMain
" signify
let g:signify_vcs_list = [ 'git', 'hg' ]
" syntastic
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_check_on_open = 1
" ycm
let g:ycm_add_preview_to_completeopt = 1
let g:ycm_autoclose_preview_window_after_completion = 1
let g:ycm_collect_identifiers_from_tags_files = 1
let g:ycm_seed_identifiers_with_syntax = 1
" vim-go
" https://github.com/fatih/vim-go/issues/57
let g:go_disable_autoinstall = 1
" vim-expand-region
vmap v <Plug>(expand_region_expand)
vmap <C-v> <Plug>(expand_region_shrink)

" system/location dependent settings
silent! source ~/.vimrc.${LOCATION}
